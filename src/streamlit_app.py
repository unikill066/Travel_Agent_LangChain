# imports
import os, sys, streamlit as st, datetime
from dotenv import load_dotenv
load_dotenv()
sys.path.append("../")
from langchain_core.messages import HumanMessage
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from tralogger import get_logger
from src.agent.graph_wf import GraphWorkflow

logger = get_logger(__name__)

agent = GraphWorkflow()

st.set_page_config(page_title="Travel Agent", page_icon=":airplane:", layout="centered", initial_sidebar_state="expanded")
st.title("Travel Agent")
st.subheader("Generate travel plans with AI")

if "messages" not in st.session_state:
    st.session_state.messages = []

st.header("How can I help you in planning a trip? Let me know where do you want to visit:")

with st.form(key="query_form", clear_on_submit=True):
    user_input = st.text_input("User Input", placeholder="e.g. Plan a trip to Goa for 5 days")
    submit_button = st.form_submit_button("Send")

if submit_button and user_input.strip():
    try:
        with st.spinner("Bot is thinking..."):
            messages = [HumanMessage(content=user_input)]
            response = agent.agent_workflow({"messages": messages})
            answer = response["messages"][-1].content
            
            markdown_content = f"""# üåç AI Travel Plan

**Generated:** {datetime.datetime.now().strftime('%Y-%m-%d at %H:%M')}  
**Created by:** unikill066's Travel Agent

---

{answer}

---

*This travel plan was generated by AI. Please verify all information, especially prices, operating hours, and travel requirements before your trip.*
"""
            st.markdown(markdown_content)

            timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
            st.download_button(
                label="üì• Download this plan as Markdown",
                data=markdown_content,
                file_name=f"AI_Trip_Planner_{timestamp}.md",
                mime="text/markdown",
            )


    except Exception as e:
        st.error(f"‚ùå An error occurred while processing your request: {str(e)}")
        logger.error(f"Unexpected error: {e}")
        raise